package com.app.tester;

import java.sql.SQLException;
import java.util.Date;
import java.util.Scanner;

import com.app.dao.BlogDao;
import com.app.dao.CategoryDao;
import com.app.dao.UserDao;
import com.app.pojos.Blogs;
import com.app.pojos.Categories;
import com.app.pojos.User;
import com.app.utils.BlogsUtils;
import com.app.utils.CategoryUtils;
import com.app.utils.UsersUtils;

public class UserTester {
  private static UserDao ud = null;
  private static  CategoryDao cd = null;
  private static  BlogDao bd = null;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		boolean flag = true;
		
		try {
			ud = new UserDao();
			cd = new CategoryDao();
			bd = new BlogDao();
			while (flag) {
				UsersUtils.menu();
				switch (sc.nextInt()) {
				case 0:
					flag = UsersUtils.Exits();
					break;
				case 1: {
					User user = UsersUtils.UserLogin(sc, ud);
					if (user != null) {
						boolean flag1 = true;
						while (flag1) {
							BlogsUtils.menu();
							System.out.println("*-*-*-*-*-*-*-*");
							System.out.println("*#* Login user Name is " + user.getFullName() + " *#*");
							System.out.println("Enter your Choice ::");
							switch (sc.nextInt()) {
							case 0: 
								flag1 = UsersUtils.Exits();
								break;
							case 1: 
								CategoryUtils.displayCategory(cd);
								break;
							case 2: 
								CategoryUtils.addCategory(sc, cd);
								break;
							case 3: 
								BlogsUtils.addBlogs(sc, bd, user, cd);
								break;
							case 4: 
								BlogsUtils.displayBlogs(bd, cd, user, true);
								break;
							case 5: 
								BlogsUtils.displayBlogs(bd, cd, user, false);
								break;
							case 6: BlogsUtils.deleteBlogs(sc, bd, user);
								break;
							case 7:
								BlogsUtils.readBlog(sc, bd);
								break;
							case 8: 
								BlogsUtils.editBlog(sc, bd, user);
								break;
							case 9: {
								sc.nextLine();
								System.out.print("Enter the words :: ");
								String word = sc.nextLine();
								System.out.println();
								System.out.println(
										"---------------------------------------------------------------------------------------------------------------------------------");
								System.out.printf("%-5s%-30s%-40s%-40s%-20s%-20s\n", "ID", "Title", "Description",
										"Time", "Category ID", "Category Title");
								System.out.println(
										"---------------------------------------------------------------------------------------------------------------------------------");
								bd.AllBlog().stream()
										.filter(s -> ((s.getContents().indexOf(word) != -1)
												|| (s.getTitle().indexOf(word) != -1)))
										.forEach(s -> System.out.printf("%-5s%-30s%-40s%-40s%-20s%-20s\n", s.getId(),
												s.getTitle(), s.getCategoryid(), s.getContents(), s.getUser_id(),
												s.getCreated_date()));
								System.out.println(
										"---------------------------------------------------------------------------------------------------------------------------------");
							}
								break;

							default:
								break;
							}
						}
					} else
						System.out.println("User Credential are wrongs!!!!");

				}
					break;
				case 2: {
					sc.nextLine();
					System.out.print("Enter Your Full Name ::");
					String fullName = sc.nextLine();
					System.out.print("Enter Your Email ::");
					String email = sc.nextLine();
					System.out.print("Enter Your Password ::");
					String password = sc.nextLine();
					System.out.print("Enter Your Mobile Number ::");
					String phoneNumber = sc.nextLine();

					int i = ud.insertUsers(new User(fullName, email, password, phoneNumber, new Date()));
					if (i > 0)
						System.out.println("**********Register is done***************");
				}
					break;
				case 3: {
					System.out.println(
							"--------------------------------------------------------------------------------------------------------------------------------------------------");
					System.out.printf("%5s%25s%25s%30s%30s\n", "id", "full name", "email", "phone no", " created time");
					System.out.println(
							"---------------------------------------------------------------------------------------------------------------------------------------------------");
					ud.allUsers().forEach(s -> System.out.printf("%5s%25s%30s%25s%30s\n", s.getUserId(),
							s.getFullName(), s.getEmail(), s.getPhoneNumber(), s.getCreated_time()));
					System.out.println(
							"---------------------------------------------------------------------------------------------------------------------------------------------------");
				}
					break;
				default:
					System.out.println("Invalid Choice ::");
					break;
				}
			}
		} catch (SQLException e) {
		}
	}
}
